version: "3"
services:
  proxy:
    build:
      context: ./proxy
      dockerfile: Dockerfile
    ports:
      - "80:80"
    restart: always
    networks:
      - eventriest_network

  api-server:
    build:
      context: ./api-server
      dockerfile: Dockerfile
    restart: always
    env_file:
      - ./api_server.env
    networks:
      - eventriest_network
    scale: 2
    depends_on:
      - email-service
      - database
      - redis-db
      - kafka
      - proxy

  email-service:
    build:
      context: ./email-service
      dockerfile: Dockerfile
    restart: always
    env_file:
      - ./email_service.env
    networks:
      - eventriest_network
    ports:
      - "50051:50051"
    depends_on:
      - kafka

  database:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /pg-data
    ports:
      - "5432:5432"
    volumes:
      - pg-data:/pg-data
    networks:
      - eventriest_network

  redis-db:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    networks:
      - eventriest_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - eventriest_network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - eventriest_network

  init-kafka-container:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    entrypoint: ["/bin/sh", "-c"]
    command: |
      "
      kafka-topics --bootstrap-server kafka:9092 --list

      kafka-topics --create --partitions 2 --bootstrap-server kafka:9092 --topic logger
      "
    networks:
      - eventriest_network

networks:
  eventriest_network:
    driver: bridge

volumes:
  pg-data:
